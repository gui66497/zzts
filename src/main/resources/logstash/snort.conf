#需要安装uuid插件  ./logstash-plugin install logstash-filter-uuid


#snort_192.168.1.216


#用于接收192.168.3.10的snort日志，进行归一化数据存储与告警的判断存储


input {
  syslog{
    port => 5140
  }
  #tcp{
  # port => 5140
  #}
  #udp{
  #  port => 5140
  #}
  #http {
  #    id => "receiver snort data"
  #    port => "3333"
  #}
}
filter {if "zzjz"!="zzjz"{
  mutate {
    add_tag => ["_filterDrop"]
  }
}else{
  #grok对原数据进行正则解析
  grok {
    match => { "message" => "\[\d:%{INT:[event][sid]}:[0-9]*+\]\s+%{DATA:[event][name]}\[Classification:\s+%{DATA:[event][classification]}\]\s+\[Priority:\s+%{INT:[event][priorityNum]}\]\s+{%{DATA:[event][protocal]}}\s+%{IPV4:[src][ip]}:?%{INT:[src][port]}?\s+->\s+%{IPV4:[dst][ip]}:?%{INT:[dst][port]}?"}
  }
}

  #事件等级判断
  if [event][priorityNum]=="0" or [event][priorityNum]=="1" {
    mutate {
      add_field => {
        "[event][priority]"=>"低"
      }
    }
  }else  if [event][priorityNum]=="2" {
    mutate {
      add_field => {
        "[event][priority]"=>"中"
      }
    }
  }else{
  mutate {
    add_field => {
      "[event][priority]"=>"高"
    }
  }
}

#添加日志来源，删除多余字段
mutate {
  add_field =>  ["[res][ip]","%{host}"]
  lowercase => ["[event][protocal]"]
  remove_field =>["severity","host","facility","severity_label","facility_label"]
}

#判断如果没有解析到sid,就不去ES查询事件属性
if [event][sid] {
elasticsearch {
  hosts => ["es1:9200/nsa-system/IDSRule"]
  query => "sid:%{[event][sid]}"
  index =>"nsa-system"
  fields => {
    "sid" => "[event][sid]"
    "action" => "[event][action]"
    "msg" => "[event][msg]"
    "name" => "[event][name]"
    "eventType" => "[event][type]"
    "measure" => "[event][measure]"
    "priority" => "[event][priority]"
    "service" => "[event][service]"
    "protocal" => "[event][protocal]"
    "os" => "[event][OS]"
  }
}
}

#根据源IP或者目的IP查询资产属性，定义最多返回两条数据，包含源和目的资产

#elasticsearch插件返回数据格式：
#如果返回一条数据，格式 {"eventObj":{"manager":"aaa"}}
#如果返回多条数据，格式 {"eventObj":{"manager":["aaa","bbb"]]}}
elasticsearch {
    hosts => ["${LS_ES_HOST:es1}:${LS_ES_PORT:9200}/soc-system/res"]
    query => "ip:(%{[src][ip]} OR %{[dst][ip]})"
    index =>"soc-system"
    result_size => 2
    fields => {
      "manager" => "[eventObj][manager]"
      "used" => "[eventObj][used]"
      "ip" => "[eventObj][ip]"
      "location" => "[eventObj][location]"
      "system" => "[eventObj][system]"
      "dept" => "[eventObj][dept]"
    }
  }




#数据类型转换
mutate {
      convert => ["[src][port]", "string"]
      convert => ["[dst][port]", "string"]
      convert => ["[event][sid]", "string"]
}
}
output {
stdout{codec => rubydebug}

}