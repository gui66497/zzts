input {
  #stdin {
  #}
  http{
    host => "0.0.0.0"
    port => "${LS_FILE_OPERATION_TRACE_PORT:7435}"
    ssl => false
  }
}
filter {
  json {
    source => "message"
  }
  #丢弃不合法数据
  if ![ip] {
    drop { }
  }
  #如果ip有值 在资产表中查询到匹配的
  if [ip] {
    elasticsearch {
      hosts => ["${LS_ES_HOST:es1}:${LS_ES_PORT:9200}/soc-system/res"]
      query => "ip:%{[ip]}"
      index =>"soc-system"
      result_size => 1
      fields => {
        "manager" => "[manager]"
        "dept" => "[dept]"
        "location" => "[location]"
      }
    }
    #ruby {
    #  code => "puts 'manager';puts event.get('manager');puts 'dept';puts event.get('dept');"
    #}
  }
  if [origin] {
    elasticsearch {
      hosts => ["${LS_ES_HOST:es1}:${LS_ES_PORT:9200}/peer_monitoring_list/type1"]
      query => 'file_id:"%{[origin]}"'
      #query => "size:654321"
      enable_sort => false
      index =>"peer_monitoring_list"
      result_size => 1
      fields => {
        "dept" => "[seeddept]"
        "employee" => "[seedemployee]"
      }
    }

    #ruby {
    #  code => "puts 'aaa';puts event.get('origin');puts event.get('seeddept');puts event.get('seedemployee');"
    #}

    mutate {
      split => { "seedemployee" => "," }
    }
    mutate {
      split => { "seeddept" => "," }
    }

    #种子文件的合法部门和合法用户 满足其一即可 即seeddept包含dept或seedemployee包含manager
    if ![seeddept] and ![seedemployee] {
    #没有查询到此种子文件 则默认为合法
    mutate {
      add_field => {
        "legal"=>"合法"
      }
    }
    } else if [manager] in [seedemployee] or [dept] in [seeddept] {
        mutate {
            add_field => {
              "legal"=>"合法"
            }
        }
    } else {
         mutate {
            add_field => {
              "legal"=>"非法"
            }
        }
    }
  }

  #生成eventlog表ID
  uuid {
    target => "[uuid]"
    overwrite => true
  }

  mutate {
    remove_field =>["seedemployee","seeddept","headers"]
  }
}
output {
    stdout{codec => rubydebug}
    elasticsearch {
        hosts => "${LS_ES_HOST:es1}:${LS_ES_PORT:9200}"
        index => "file_operation_trace-%{+YYYY.MM.dd}"
    }
    #如果是非法操作 需要存到eventlog表 dataType为数据
    if [legal] == "非法" {
        #stdout{codec => rubydebug}
        elasticsearch {
            hosts => "${LS_ES_HOST:es1}:${LS_ES_PORT:9200}"
            index => "eventlog_%{+YYYY.MM.dd}"
            action => "update"
            document_id => "%{[uuid]}"
            script => "ctx._source['@timestamp']=params.event.get('@timestamp');
            ctx._source.dataType='数据';ctx._source.eventType='数据非法访问';
            ctx._source.assetName=params.event.get('origin');ctx._source.assetIP=params.event.get('ip');
            ctx._source.dept = params.event.get('dept');ctx._source.eventName = params.event.get('action');
            ctx._source.eventUserMsg = params.event.get('detail');ctx._source.eventScore = 30;
            ctx._source.eventPriority='高';ctx._source.used = '';ctx._source.location = params.event.get('location');"
            scripted_upsert => true
        }
    }
}