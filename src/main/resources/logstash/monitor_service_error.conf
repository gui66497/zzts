input {
  elasticsearch {
    hosts => "${LS_ES_HOST:es1}:${LS_ES_PORT:9200}"
    index => "service_error-*"
    query => '{"query":{"bool":{"must":[{"range":{"@timestamp":{"gte":"now-15m/m","lte":"now/m"}}}]}}}'
    size => 500
    schedule => "*/15 * * * *"
    docinfo => true
  }
}
filter {
  if [errorReason] == 'server_delay' {
    mutate {
      add_field => {
        "[eventType]"=> "服务延迟较高"
        "[eventScore]"=> 60
        "[eventPriority]"=> "中"
      }
    }
  } else if [errorReason] == 'server_lost' {
    mutate {
      add_field => {
        "[eventType]"=> "服务无法访问"
        "[eventScore]"=> 90
        "[eventPriority]"=> "高"
      }
    }
  } else if [errorReason] == 'nmap_lost' {
    mutate {
      add_field => {
        "[eventType]"=> "目标主机响应失败"
        "[eventScore]"=> 90
        "[eventPriority]"=> "高"
      }
    }
  } else if [errorReason] == 'cpu_high' {
    mutate {
      add_field => {
        "[eventType]"=> "cpu使用率过高"
        "[eventScore]"=> 60
        "[eventPriority]"=> "中"
      }
    }
  } else if [errorReason] == 'mem_high' {
    mutate {
      add_field => {
        "[eventType]"=> "内存使用率过高"
        "[eventScore]"=> 60
        "[eventPriority]"=> "中"
      }
    }
  } else if [errorReason] == 'disk_high' {
    mutate {
      add_field => {
        "[eventType]"=> "磁盘使用率过高"
        "[eventScore]"=> 60
        "[eventPriority]"=> "中"
      }
    }
  }

  #如果ip有值 在资产表中查询到匹配的
  if [ip] {
    elasticsearch {
      hosts => ["${LS_ES_HOST:es1}:${LS_ES_PORT:9200}/soc-system/res"]
      query => "ip:%{[ip]}"
      index => "soc-system"
      result_size => 1
      fields => {
        "manager" => "[manager]"
        "used" => "[used]"
        "dept" => "[dept]"
        "location" => "[location]"
      }
    }
  }

  if [manager] {
    mutate {
      add_field => {
        "[assetName]"=> "%{manager}-%{used}-%{ip}"
      }
    }
  } else {
    mutate {
      add_field => {
        "[assetName]"=> "%{ip}"
      }
    }
  }

  #生成eventlog表ID
  uuid {
    target => "[uuid]"
    overwrite => true

  }
}
output {
  #stdout{ codec => rubydebug }
  elasticsearch {
    hosts => "${LS_ES_HOST:es1}:${LS_ES_PORT:9200}"
    index => "eventlog_%{+YYYY.MM.dd}"
    action => "update"
    document_id => "%{[uuid]}"
    script => "ctx._source['@timestamp']=params.event.get('@timestamp');
    ctx._source.dataType = '服务'; ctx._source.eventType = params.event.get('eventType');
    ctx._source.assetName = params.event.get('assetName'); ctx._source.assetIP = params.event.get('ip');
    ctx._source.dept = params.event.get('dept'); ctx._source.eventName = params.event.get('eventType');
    ctx._source.eventUserMsg = params.event.get('errorMsg'); ctx._source.eventScore = params.event.get('eventScore');
    ctx._source.eventPriority = params.event.get('eventPriority'); ctx._source.used = params.event.get('used');ctx._source.location = params.event.get('location'); "
    scripted_upsert => true
  }
}