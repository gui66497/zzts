input {
    jdbc {
        id=>"testsqlserver"
        jdbc_connection_string => "jdbc:sqlserver://192.168.1.128:1433;DatabaseName=virus"
        jdbc_user => "sa"
        jdbc_password => "814agzxAGZX"
        jdbc_driver_library => "D:\zzjz_work\logstash-6.2.2\logstash-core\lib\jars\sqljdbc.jar"
        jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
        #最后的and项是为了防止一下查询出太多历史数据而做的限制
        statement =>"SELECT kv.ID,kv.ClientID,kv.Path,kv.Name,kv.VirusType,kv.Result,kv.Type,kv.CTime,kv.MD5,kb.IP,kb.MAC,kb.VirusLibDate,kb.OSVersion
                    FROM KV_VirusLog kv LEFT JOIN KV_BaseInfo kb ON kv.ClientID = kb.ClientID
                    WHERE kv.id > :sql_last_value AND kv.CTime >= '2018-07-25 14:20:00.000' ORDER BY kv.ID ASC"
        schedule => "55 * * * *"
        use_column_value => true
        tracking_column => 'id'
        last_run_metadata_path => "D:\zzjz_work\logstash-6.2.2\config\sql_last_value_path\virus\logstash_jdbc_last_run"
    }
}
filter {
    #这里简单处理 因为virustype==0的数据太多
    if [virustype] != 0 {
        clone {
            clones => ["alarm"]
        }
    }

    if [clientid] {
        #ip只保留了ipv4
        ruby {
            code => "def hex(value)
                      value = value.upcase
                      ipv = value.to_i(16)
                      c = 16777216.0
                      b = [0,1,2,3]
                      for i in b do   
                        k = (ipv / c).to_i;
                        ipv -= c * k;
                        b[i]= k;
                        c = c/256.0;
                      end
                      d=b[0].to_s+'.'+b[1].to_s+'.'+b[2].to_s+'.'+b[3].to_s;
                    end
                    aa=event.get('ip');
                    bb = aa.split(';');
                    ee = ''
                    length = bb.length;
                    i = 0;
                    while i< length do  
                      if bb[i].size==7 || bb[i].size==8
                          ee = ee + hex(bb[i]) + ';';
                      end
                      i = i+1
                    end
                    event.set('ip',ee)
                    "
        }
    }
    if [type] == "alarm" {
        #这里简单处理 assetIp取首位ip
        ruby {
            code => "ipStr=event.get('ip');
                     event.set('assetIP',ipStr.split(';')[0])"
        }
        elasticsearch {
		  hosts => ["${LS_ES_HOST:192.168.1.188}:${LS_ES_PORT:9200}/soc-system/res"]
		  query => "ip:%{assetIP}"
		  index =>"soc-system"
		  result_size => 1
		  fields => {
		    "manager" => "[userName]"
		    "used" => "[used]"
		    "location" => "[location]"
		    "dept" => "[dept]"
		  }
		}

        if [manager] {
            mutate {
                add_field => {
                    "[assetName]"=>"%{userName}-%{used}-%{assetIP}"
                }
            }
        } else {
            mutate {
                add_field => {
                    "[assetName]"=>"%{assetIP}"
                }
            }
        }
        mutate {
			add_field => {
	          "[dataType]"=>"资产"
	          "[eventType]"=>"病毒报警"
              "[eventName]"=>"发现了%{name}病毒"
			  "[eventUserMsg]"=>"%{assetName}的主机%{eventName},病毒路径为%{path}"
	        }
       	}
        if [virustype] == 0 {
            mutate {
                add_field => {
                    "[eventScore]"=>20
                    "[eventPriority]"=>"低"
                }
            }
       	}else if [virustype] > 0 and [virustype] < 4 {
            mutate {
                add_field => {
                "[eventScore]"=>60
                "[eventPriority]"=>"中"
                }
	        }
       	}else if [virustype] > 3 {
            mutate {
                add_field => {
                "[eventScore]"=>85
                "[eventPriority]"=>"高"
                }
	        }
       	}
        mutate {
            remove_field => ["ip","md5","viruslibdate","mac","type","osversion","path","id","clientid","virustype","result","name"]
        }
    }

}
output {
    stdout {codec => rubydebug }
    if [eventUserMsg] {
        elasticsearch {
            hosts => ["${LS_ES_HOST:192.168.1.188}:${LS_ES_PORT:9200}"]
            index => "eventlog_%{+YYYY.MM.dd}"
        }
    } else {
        elasticsearch {
            hosts => ["${LS_ES_HOST:192.168.1.188}:${LS_ES_PORT:9200}"]
            index => "virus_12j-%{+YYYY.MM.dd}"
        }
    }
}